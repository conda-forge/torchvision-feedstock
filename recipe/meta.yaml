{% set version = "0.11.2" %}
# waiting for https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/1890
{% set pytorch_version = "1.10.0" %}
# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

package:
  name: torchvision-split
  version: {{ version }}

source:
  url: https://github.com/pytorch/vision/archive/v{{ version }}.tar.gz
  sha256: 55689c57c29f82438a133d0af3315991037be59c8e02471bdcaa31731154a714
  patches:
    - patches/0001-avoid-hard-coded-gcc.patch

build:
  number: 1
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('cxx') }}

outputs:
  - name: torchvision
    script: build-torch.sh  # [not win]
    script: build-torch.bat  # [win]
    build:
      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ torch_proc_type }}  # [cuda_compiler_version == "None"]
      string: py{{ CONDA_PY }}cuda{{ cuda_compiler_version|replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ torch_proc_type }}  # [cuda_compiler_version != "None"]
      run_exports:
        # ensure matching proc-type
        - torchvision =*=*_{{ torch_proc_type }}

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}                 # [cuda_compiler_version != "None"]
        - sysroot_linux-64 ==2.17                # [linux64]
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
        - pytorch ={{ pytorch_version }}={{ torch_proc_type }}*      # [build_platform != target_platform]
      host:
        - python
        - pip
        - setuptools
        - cudnn                                  # [cuda_compiler_version != "None"]
        # split off image/video into separate outputs?
        - jpeg
        - libpng
        - ffmpeg
        - numpy
        # exclude 8.3.0 and 8.3.1 specifically due to pytorch/vision#4146, python-pillow/Pillow#5571
        - pillow >=5.3.0,!=8.3.0,!=8.3.1
        - pytorch {{ pytorch_version }}
        - pytorch-gpu                           # [cuda_compiler_version != "None"]
        - pytorch-cpu                           # [cuda_compiler_version == "None"]
      run:
        - python
        - pytorch {{ pytorch_version }}
        - pytorch-gpu                            # [cuda_compiler_version != "None"]
        - pytorch-cpu                            # [cuda_compiler_version == "None"]
        - {{ pin_compatible('cudnn') }}          # [cuda_compiler_version != "None"]
        - {{ pin_compatible('numpy') }}
        - pillow >=5.3.0,!=8.3.0,!=8.3.1
        - ffmpeg

    test:
      requires:
        - pytest
        - av
        - requests
        - scipy
        - pytest-mock
      source_files:
        - test
      imports:
        - torchvision
        - torchvision.datasets
        - torchvision.models
        - torchvision.transforms
        - torchvision.utils
      commands:
        # skip test_url_is_accessible instead of hitting 20+ servers per run, since
        # each server might be occasionally unresponsive and end up failing our CI
        {% set tests_to_skip = "test_url_is_accessible" %}
        # osx warns with nnpack if there is no AVX2, see conda-forge/pytorch-cpu-feedstock#56
        {% set tests_to_skip = tests_to_skip + " or test_adjust_sharpness" %}  # [osx]
        # 2021/10/28 hmaarrfk: I am able to run it locally on a large machine.
        # It seems to fail around testing of vgg
        # This test seems to just destroy the memory of the system.
        {% set tests_to_skip = tests_to_skip + " or test_forward_backward" %}
        {% set tests_to_skip = tests_to_skip + " or test_jit_forward_backward" %}
        # 2022/02/22 hmaarrfk
        # The following tests seem to be broken due to a bug between av and ffmpeg
        # https://github.com/conda-forge/torchvision-feedstock/pull/34#issuecomment-1019347106
        # https://github.com/conda-forge/av-feedstock/pull/43
        # https://github.com/conda-forge/ffmpeg-feedstock/pull/115
        {% set tests_to_skip = tests_to_skip + " or test_feature_types" %}
        {% set tests_to_skip = tests_to_skip + " or test_num_examples" %}
        {% set tests_to_skip = tests_to_skip + " or test_smoke" %}
        {% set tests_to_skip = tests_to_skip + " or test_str_smoke" %}
        {% set tests_to_skip = tests_to_skip + " or test_transforms" %}
        {% set tests_to_skip = tests_to_skip + " or test_random_clip_sampler" %}
        {% set tests_to_skip = tests_to_skip + " or test_random_clip_sampler_unequal" %}
        {% set tests_to_skip = tests_to_skip + " or test_uniform_clip_sampler" %}
        {% set tests_to_skip = tests_to_skip + " or test_uniform_clip_sampler_insufficient_clips" %}
        {% set tests_to_skip = tests_to_skip + " or test_distributed_sampler_and_uniform_clip_sampler" %}
        {% set tests_to_skip = tests_to_skip + " or test_video_clips" %}
        {% set tests_to_skip = tests_to_skip + " or test_write_read_video" %}
        {% set tests_to_skip = tests_to_skip + " or test_probe_video_from_file" %}
        {% set tests_to_skip = tests_to_skip + " or test_probe_video_from_memory" %}
        {% set tests_to_skip = tests_to_skip + " or test_read_timestamps" %}
        {% set tests_to_skip = tests_to_skip + " or test_read_timestamps_from_packet" %}
        {% set tests_to_skip = tests_to_skip + " or test_read_video_pts_unit_sec" %}
        {% set tests_to_skip = tests_to_skip + " or test_read_timestamps_pts_unit_sec" %}
        {% set tests_to_skip = tests_to_skip + " or test_write_video_with_audio" %}
        # 2022/02/22 hmaarrfk
        # While av partially works on linux, it fails a little harder on osx
        # Therefore we need to skip a few more tests relating to loading videos
        {% set tests_to_skip = tests_to_skip + " or test_classes" %}        # [osx]
        {% set tests_to_skip = tests_to_skip + " or test_is_valid_file" %}  # [osx]
        # 2021/10/29 hmaarrfk
        # CIs do not have enough resources to run the full suite of model tests
        - rm -f test/test_models.py  # [unix]
        - del /f test\test_models.py  # [win]
        - pytest --verbose -k "not ({{ tests_to_skip }})" test/

about:
  home: http://pytorch.org/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Image and video datasets and models for torch deep learning
  dev_url: https://github.com/pytorch/vision
  doc_url: http://pytorch.org/docs/master/torchvision

extra:
  recipe-maintainers:
    - nehaljwani
    - hmaarrfk
    - h-vetinari
  feedstock-name: torchvision
